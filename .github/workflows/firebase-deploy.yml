# This file was auto-generated by the Firebase CLI
# https://github.com/firebase/firebase-tools

name: Deploy to Firebase Hosting on merge

on:
  push:
    branches:
      - dev
      - staging
      - prod

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout to the repository
        uses: actions/checkout@v2

      - name: Set up NodeJS environment
        uses: actions/setup-node@v2
        with:
          node-version: 18

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install package dependencies
        run: npm install

      - name: Create test build
        run: npm run build

  # Build and deploy dev
  deploy_dev:
    if: ${{github.ref_name == "dev"}}
    runs-on: ubuntu-latest
    needs: [build]
    environment:
      name: dev
      url: https://dev.dibba.com.br
    steps:
      - uses: actions/checkout@v2
      - run: npm run build
      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT_FRONTEND_COSTUMER }}"
          channelId: dev
          projectId: frontend-costumer

  # Build and deploy staging
  deploy_staging:
    if: ${{github.ref_name == "staging"}}
    runs-on: ubuntu-latest
    needs: [build]
    environment:
      name: staging
      url: https://staging.dibba.com.br
    steps:
      - uses: actions/checkout@v2
      - run: npm run build
      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT_FRONTEND_COSTUMER }}"
          channelId: staging
          projectId: frontend-costumer

  # Build and deploy prod
  deploy_prod:
    if: ${{github.ref_name == "prod"}}
    runs-on: ubuntu-latest
    needs: [build]
    environment:
      name: prod
      url: https://dibba.com.br
    steps:
      - uses: actions/checkout@v2
      - run: npm run build
      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT_FRONTEND_COSTUMER }}"
          channelId: prod
          projectId: frontend-costumer
