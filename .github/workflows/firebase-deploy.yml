# This file was auto-generated by the Firebase CLI
# https://github.com/firebase/firebase-tools

name: Deploy to Firebase Hosting on merge

on:
  push:
    branches:
      - dev
      - staging
      - prod

jobs:
  notify_start:
    runs-on: ubuntu-latest
    steps:
      - name: Notification Slack
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: develop_tracker
          SLACK_TITLE: "Deployment"
          SLACK_USERNAME: (CI) Deployment
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_MESSAGE: The deploy for ${{github.ref_name}} will start soon ðŸš€ðŸš€ðŸš€

  deploy_dev:
    if: ${{github.ref_name == "dev"}}
    runs-on: ubuntu-latest
    environment:
      name: dev
      url: https://dev.dibba.com.br
    steps:
      - uses: actions/checkout@v2
      - run: npm run build
      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT_FRONTEND_COSTUMER }}"
          channelId: dev
          projectId: frontend-costumer

  deploy_staging:
    if: ${{github.ref_name == "staging"}}
    runs-on: ubuntu-latest
    environment:
      name: staging
      url: https://staging.dibba.com.br
    steps:
      - uses: actions/checkout@v2
      - run: npm run build
      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT_FRONTEND_COSTUMER }}"
          channelId: staging
          projectId: frontend-costumer

  deploy_prod:
    if: ${{github.ref_name == "prod"}}
    runs-on: ubuntu-latest
    environment:
      name: prod
      url: https://dibba.com.br
    steps:
      - uses: actions/checkout@v2
      - run: npm run build
      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT_FRONTEND_COSTUMER }}"
          channelId: prod
          projectId: frontend-costumer

  notify_end:
    runs-on: ubuntu-latest
    needs: [notify_start, build]
    steps:
      - name: Notification Slack
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: develop_tracker
          SLACK_TITLE: "Deployment"
          SLACK_USERNAME: (CI) Deployment
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_MESSAGE: The deploy for ${{github.ref_name}} was a success! ðŸŽ‰ðŸŽ‰ðŸŽ‰
